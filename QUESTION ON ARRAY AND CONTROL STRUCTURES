QUESTION 1
using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter three numbers:");
        int[] numbers = new int[3];

        for (int i = 0; i < 3; i++)
        {
            numbers[i] = int.Parse(Console.ReadLine());
        }

        Array.Sort(numbers);

        Console.WriteLine("Numbers in ascending order:");
        foreach (int num in numbers)
        {
            Console.Write(num + " ");
        }
    }
}

QUESTION 2
<?php

function smallestindex($arr, $size) {
    $minIndex = 0;
    
    for ($i = 1; $i < $size; $i++) {
        if ($arr[$i] < $arr[$minIndex]) {
            $minIndex = $i;
        }
    }

    return $minIndex;
}

// Test the function
$numbers = array(5, 2, 8, 1, 7);
$size = count($numbers);
$index = smallestindex($numbers, $size);

echo "Index of the smallest element: $index";

QUESTION 3
using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a string:");
        string inputString = Console.ReadLine();

        char[] charArray = inputString.ToCharArray();

        for (int i = 0; i < charArray.Length; i++)
        {
            charArray[i] = char.ToUpper(charArray[i]);
        }

        string result = new string(charArray);
        Console.WriteLine("String in uppercase: " + result);
    }
}

QUESTION 4
using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter the number of rows (N):");
        int rows = int.Parse(Console.ReadLine());

        Console.WriteLine("Enter the number of columns (M):");
        int columns = int.Parse(Console.ReadLine());

        int[,] matrixA = new int[rows, columns];
        int[,] matrixB = new int[rows, columns];
        int[,] resultMatrix = new int[rows, columns];

        Console.WriteLine("Enter elements for Matrix A:");
        FillMatrix(matrixA, rows, columns);

        Console.WriteLine("Enter elements for Matrix B:");
        FillMatrix(matrixB, rows, columns);

        // Adding matrices
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < columns; j++)
            {
                resultMatrix[i, j] = matrixA[i, j] + matrixB[i, j];
            }
        }

        Console.WriteLine("Resultant Matrix after addition:");
        PrintMatrix(resultMatrix, rows, columns);
    }

    static void FillMatrix(int[,] matrix, int rows, int columns)
    {
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < columns; j++)
            {
                Console.WriteLine($"Enter element at position ({i + 1}, {j + 1}):");
                matrix[i, j] = int.Parse(Console.ReadLine());
            }
        }
    }

    static void PrintMatrix(int[,] matrix, int rows, int columns)
    {
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < columns; j++)
            {
                Console.Write(matrix[i, j] + "\t");
            }
            Console.WriteLine();
        }
    }
}

QUESTION 5
using System;

class Program
{
    static void Main()
    {
        float[] alpha = new float[50];

        for (int i = 0; i < 25; i++)
        {
            alpha[i] = i * i;
            alpha[i + 25] = 3 * i;
        }

        Console.WriteLine("Array elements (10 per line):");
        for (int i = 0; i < 50; i++)
        {
            Console.Write(alpha[i] + "\t");

            if ((i + 1) % 10 == 0)
            {
                Console.WriteLine();
            }
        }
    }
}

QUESTION 6
using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int number = int.Parse(Console.ReadLine());

        if (number > 0)
        {
            Console.WriteLine($"{number} is positive.");
        }
        else if (number < 0)
        {
            Console.WriteLine($"{number} is negative.");
        }
        else
        {
            Console.WriteLine($"{number} is zero.");
        }
    }
}




THE OUTPUT ARE ATTACHED IN SAME REPOSITORY NAMED OUTPUT OF QUESTION ON ARRAY AND CONTROL STRUCTURES 
